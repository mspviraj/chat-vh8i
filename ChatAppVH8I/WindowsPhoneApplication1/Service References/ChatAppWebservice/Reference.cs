//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WindowsPhoneApplication1.ChatAppWebservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatAppWebservice.HelloWorldServiceSoap")]
    public interface HelloWorldServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/get_messages", ReplyAction="*")]
        System.IAsyncResult Beginget_messages(WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequest request, System.AsyncCallback callback, object asyncState);
        
        WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponse Endget_messages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/send_message", ReplyAction="*")]
        System.IAsyncResult Beginsend_message(WindowsPhoneApplication1.ChatAppWebservice.send_messageRequest request, System.AsyncCallback callback, object asyncState);
        
        WindowsPhoneApplication1.ChatAppWebservice.send_messageResponse Endsend_message(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class get_messagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="get_messages", Namespace="http://tempuri.org/", Order=0)]
        public WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequestBody Body;
        
        public get_messagesRequest() {
        }
        
        public get_messagesRequest(WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class get_messagesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string telephone;
        
        public get_messagesRequestBody() {
        }
        
        public get_messagesRequestBody(string telephone) {
            this.telephone = telephone;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class get_messagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="get_messagesResponse", Namespace="http://tempuri.org/", Order=0)]
        public WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponseBody Body;
        
        public get_messagesResponse() {
        }
        
        public get_messagesResponse(WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class get_messagesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement get_messagesResult;
        
        public get_messagesResponseBody() {
        }
        
        public get_messagesResponseBody(System.Xml.Linq.XElement get_messagesResult) {
            this.get_messagesResult = get_messagesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class send_messageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="send_message", Namespace="http://tempuri.org/", Order=0)]
        public WindowsPhoneApplication1.ChatAppWebservice.send_messageRequestBody Body;
        
        public send_messageRequest() {
        }
        
        public send_messageRequest(WindowsPhoneApplication1.ChatAppWebservice.send_messageRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class send_messageRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string to;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string from;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string date;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string content;
        
        public send_messageRequestBody() {
        }
        
        public send_messageRequestBody(string to, string from, string date, string content) {
            this.to = to;
            this.from = from;
            this.date = date;
            this.content = content;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class send_messageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="send_messageResponse", Namespace="http://tempuri.org/", Order=0)]
        public WindowsPhoneApplication1.ChatAppWebservice.send_messageResponseBody Body;
        
        public send_messageResponse() {
        }
        
        public send_messageResponse(WindowsPhoneApplication1.ChatAppWebservice.send_messageResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class send_messageResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement send_messageResult;
        
        public send_messageResponseBody() {
        }
        
        public send_messageResponseBody(System.Xml.Linq.XElement send_messageResult) {
            this.send_messageResult = send_messageResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HelloWorldServiceSoapChannel : WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class get_messagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public get_messagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class send_messageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public send_messageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.Linq.XElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.Linq.XElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldServiceSoapClient : System.ServiceModel.ClientBase<WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap>, WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap {
        
        private BeginOperationDelegate onBeginget_messagesDelegate;
        
        private EndOperationDelegate onEndget_messagesDelegate;
        
        private System.Threading.SendOrPostCallback onget_messagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginsend_messageDelegate;
        
        private EndOperationDelegate onEndsend_messageDelegate;
        
        private System.Threading.SendOrPostCallback onsend_messageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public HelloWorldServiceSoapClient() {
        }
        
        public HelloWorldServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloWorldServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloWorldServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloWorldServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<get_messagesCompletedEventArgs> get_messagesCompleted;
        
        public event System.EventHandler<send_messageCompletedEventArgs> send_messageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap.Beginget_messages(WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginget_messages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Beginget_messages(string telephone, System.AsyncCallback callback, object asyncState) {
            WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequest inValue = new WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequest();
            inValue.Body = new WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequestBody();
            inValue.Body.telephone = telephone;
            return ((WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap)(this)).Beginget_messages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponse WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap.Endget_messages(System.IAsyncResult result) {
            return base.Channel.Endget_messages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement Endget_messages(System.IAsyncResult result) {
            WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponse retVal = ((WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap)(this)).Endget_messages(result);
            return retVal.Body.get_messagesResult;
        }
        
        private System.IAsyncResult OnBeginget_messages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string telephone = ((string)(inValues[0]));
            return this.Beginget_messages(telephone, callback, asyncState);
        }
        
        private object[] OnEndget_messages(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.Endget_messages(result);
            return new object[] {
                    retVal};
        }
        
        private void Onget_messagesCompleted(object state) {
            if ((this.get_messagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.get_messagesCompleted(this, new get_messagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void get_messagesAsync(string telephone) {
            this.get_messagesAsync(telephone, null);
        }
        
        public void get_messagesAsync(string telephone, object userState) {
            if ((this.onBeginget_messagesDelegate == null)) {
                this.onBeginget_messagesDelegate = new BeginOperationDelegate(this.OnBeginget_messages);
            }
            if ((this.onEndget_messagesDelegate == null)) {
                this.onEndget_messagesDelegate = new EndOperationDelegate(this.OnEndget_messages);
            }
            if ((this.onget_messagesCompletedDelegate == null)) {
                this.onget_messagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onget_messagesCompleted);
            }
            base.InvokeAsync(this.onBeginget_messagesDelegate, new object[] {
                        telephone}, this.onEndget_messagesDelegate, this.onget_messagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap.Beginsend_message(WindowsPhoneApplication1.ChatAppWebservice.send_messageRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginsend_message(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult Beginsend_message(string to, string from, string date, string content, System.AsyncCallback callback, object asyncState) {
            WindowsPhoneApplication1.ChatAppWebservice.send_messageRequest inValue = new WindowsPhoneApplication1.ChatAppWebservice.send_messageRequest();
            inValue.Body = new WindowsPhoneApplication1.ChatAppWebservice.send_messageRequestBody();
            inValue.Body.to = to;
            inValue.Body.from = from;
            inValue.Body.date = date;
            inValue.Body.content = content;
            return ((WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap)(this)).Beginsend_message(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WindowsPhoneApplication1.ChatAppWebservice.send_messageResponse WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap.Endsend_message(System.IAsyncResult result) {
            return base.Channel.Endsend_message(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Xml.Linq.XElement Endsend_message(System.IAsyncResult result) {
            WindowsPhoneApplication1.ChatAppWebservice.send_messageResponse retVal = ((WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap)(this)).Endsend_message(result);
            return retVal.Body.send_messageResult;
        }
        
        private System.IAsyncResult OnBeginsend_message(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string to = ((string)(inValues[0]));
            string from = ((string)(inValues[1]));
            string date = ((string)(inValues[2]));
            string content = ((string)(inValues[3]));
            return this.Beginsend_message(to, from, date, content, callback, asyncState);
        }
        
        private object[] OnEndsend_message(System.IAsyncResult result) {
            System.Xml.Linq.XElement retVal = this.Endsend_message(result);
            return new object[] {
                    retVal};
        }
        
        private void Onsend_messageCompleted(object state) {
            if ((this.send_messageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.send_messageCompleted(this, new send_messageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void send_messageAsync(string to, string from, string date, string content) {
            this.send_messageAsync(to, from, date, content, null);
        }
        
        public void send_messageAsync(string to, string from, string date, string content, object userState) {
            if ((this.onBeginsend_messageDelegate == null)) {
                this.onBeginsend_messageDelegate = new BeginOperationDelegate(this.OnBeginsend_message);
            }
            if ((this.onEndsend_messageDelegate == null)) {
                this.onEndsend_messageDelegate = new EndOperationDelegate(this.OnEndsend_message);
            }
            if ((this.onsend_messageCompletedDelegate == null)) {
                this.onsend_messageCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onsend_messageCompleted);
            }
            base.InvokeAsync(this.onBeginsend_messageDelegate, new object[] {
                        to,
                        from,
                        date,
                        content}, this.onEndsend_messageDelegate, this.onsend_messageCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap CreateChannel() {
            return new HelloWorldServiceSoapClientChannel(this);
        }
        
        private class HelloWorldServiceSoapClientChannel : ChannelBase<WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap>, WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap {
            
            public HelloWorldServiceSoapClientChannel(System.ServiceModel.ClientBase<WindowsPhoneApplication1.ChatAppWebservice.HelloWorldServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult Beginget_messages(WindowsPhoneApplication1.ChatAppWebservice.get_messagesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("get_messages", _args, callback, asyncState);
                return _result;
            }
            
            public WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponse Endget_messages(System.IAsyncResult result) {
                object[] _args = new object[0];
                WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponse _result = ((WindowsPhoneApplication1.ChatAppWebservice.get_messagesResponse)(base.EndInvoke("get_messages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult Beginsend_message(WindowsPhoneApplication1.ChatAppWebservice.send_messageRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("send_message", _args, callback, asyncState);
                return _result;
            }
            
            public WindowsPhoneApplication1.ChatAppWebservice.send_messageResponse Endsend_message(System.IAsyncResult result) {
                object[] _args = new object[0];
                WindowsPhoneApplication1.ChatAppWebservice.send_messageResponse _result = ((WindowsPhoneApplication1.ChatAppWebservice.send_messageResponse)(base.EndInvoke("send_message", _args, result)));
                return _result;
            }
        }
    }
}
